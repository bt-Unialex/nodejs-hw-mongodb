{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts book",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of \"Contacts book\" app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://contacts-book-7tj4.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Contacts",
      "description": "Operations for contacts data."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register new user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "Users's name",
                    "type": "string",
                    "example": "John Dou"
                  },
                  "email": {
                    "description": "Users's email",
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "password": {
                    "description": "Users's password",
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "User's name",
                          "type": "string",
                          "example": "John Dou"
                        },
                        "email": {
                          "description": "User's email",
                          "type": "string",
                          "example": "example@mail.com"
                        },
                        "_id": {
                          "description": "User's ID",
                          "type": "string",
                          "example": "68839a81420dc1826aea2c3f"
                        },
                        "createdAt": {
                          "description": "Created at",
                          "type": "string",
                          "example": "2025-08-05T15:29:49.877Z"
                        },
                        "updatedAt": {
                          "description": "Updated last time at",
                          "type": "string",
                          "example": "2025-08-05T15:29:49.877Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "ConflictError"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Email already in use"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "operationId": "loginUser",
        "description": "User Login",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "Users's email",
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "password": {
                    "description": "Users's password",
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully loged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "description": "Access token",
                          "type": "string",
                          "example": "uawggemmADHv6GKvt5aOBVoml+aYQ6UDhzHJWcml"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "operationId": "logoutUser",
        "description": "User Logout",
        "security": [],
        "parameters": [
          {
            "name": "sessionId",
            "in": "cookie",
            "description": "Session ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68839a81420dc1826aea2c3f"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User successfully loged out"
          },
          "401": {
            "description": "No unauthorized errors here"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh session",
        "operationId": "refreshSession",
        "description": "Refresh session",
        "security": [],
        "parameters": [
          {
            "name": "sessionId",
            "in": "cookie",
            "description": "Session ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68839a81420dc1826aea2c3f"
            }
          },
          {
            "name": "refreshToken",
            "in": "cookie",
            "description": "Refresh Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "34sVJKsKgp6n2flGmUvnMPvrBs0pyZ2HtK%2BDhmSG"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "description": "Access token",
                          "type": "string",
                          "example": "uawggemmADHv6GKvt5aOBVoml+aYQ6UDhzHJWcml"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Request to reset password",
        "operationId": "sendResetEmail",
        "description": "Request to reset password",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "Users's email",
                    "type": "string",
                    "example": "example@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email was successfully sent!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email was successfully sent!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "Set new password",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "token"
                ],
                "properties": {
                  "password": {
                    "description": "New users's password",
                    "type": "string",
                    "example": "password"
                  },
                  "token": {
                    "description": "JWT token from email",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2ODhhMTI5ZWIwOGEyYzFmMWEzYjA2MDgiLCJlbWFpbCI6IlVuaWFsZXh4QGdtYWlsLmNvbSIsImlhdCI6MTc1NDA1NTU5NSwiZXhwIjoxNzU0MDU1ODk1fQ.GOdscsGmzJe-2L9vUvc9B_Z-jvPaO09skzkdvrawHHo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been successfully reset.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset."
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all contacts",
        "operationId": "getAllContacts",
        "description": "Get all contacts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "You can specify all contact fields. Default sort by \"_id\"",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "phoneNumber",
                "email",
                "isFavourite",
                "contactType",
                "createdAt",
                "updatedAt"
              ],
              "example": "name"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "You can sort in descending order. Default is ascending.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "You can filter contacts by type",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            }
          },
          {
            "name": "isFavourite",
            "in": "query",
            "description": "You can show favourite contacts only. Or exclude them",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "1",
                "false",
                "0"
              ],
              "example": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 15
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 2
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber"
                ],
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "John Dou"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number must contain only digits, spaces, parentheses, plus signs, and hyphens",
                    "type": "string",
                    "example": "+380000000000"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "isFavourite": {
                    "description": "Is it favourite contact",
                    "type": "boolean",
                    "example": false
                  },
                  "contactType": {
                    "description": "Type of contact",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "photo": {
                    "description": "Contact's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContactbById",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68839a81420dc1826aea2c3f"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact by id",
        "operationId": "updateContactbById",
        "description": "Update contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68839a81420dc1826aea2c3f"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "John Dou"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number must contain only digits, spaces, parentheses, plus signs, and hyphens",
                    "type": "string",
                    "example": "+380000000000"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "isFavourite": {
                    "description": "Is it favourite contact",
                    "type": "boolean",
                    "example": false
                  },
                  "contactType": {
                    "description": "Type of contact",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "photo": {
                    "description": "Contact's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact by id",
        "operationId": "deleteContactbById",
        "description": "Delete contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68839a81420dc1826aea2c3f"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is expired or invalid."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Things not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "Contact's ID",
            "type": "string",
            "example": "68839a81420dc1826aea2c3f"
          },
          "userId": {
            "description": "Owner's ID",
            "type": "string",
            "example": "68839a81420dc1826aea2c3f"
          },
          "name": {
            "description": "Contact's name",
            "type": "string",
            "example": "John Dou"
          },
          "phoneNumber": {
            "description": "Contact's phone number",
            "type": "string",
            "example": "+380000000000"
          },
          "email": {
            "description": "Contact's email",
            "type": "string",
            "example": "example@mail.com"
          },
          "photo": {
            "description": "Contact's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/dh7gonchl/image/upload/v1754137758/photo_688a129eb08a2c1f1a3b0608.jpg"
          },
          "isFavourite": {
            "description": "Is it favourite contact",
            "type": "boolean",
            "example": false
          },
          "contactType": {
            "description": "Type of contact",
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ]
          },
          "createdAt": {
            "description": "Created at",
            "type": "string",
            "example": "2025-08-05T15:29:49.877Z"
          },
          "updatedAt": {
            "description": "Updated last time at",
            "type": "string",
            "example": "2025-08-05T15:29:49.877Z"
          }
        }
      }
    }
  }
}